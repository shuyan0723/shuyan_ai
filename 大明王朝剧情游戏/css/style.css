* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body,
html {
  height: auto;
  min-height: 100vh;
  overflow-y: auto;
  font-family: "Microsoft YaHei", "SimSun", serif;
  background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #0a0a0a 100%);
  color: #e0e0e0;
  line-height: 1.6;
  background-image:
    radial-gradient(circle at 20% 80%, rgba(120, 0, 0, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(0, 0, 0, 0.5) 0%, transparent 50%),
    url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="%23333" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
  background-size: cover, cover, 20px 20px;
  background-repeat: no-repeat, no-repeat, repeat;
  background-attachment: fixed;
}

.game-container {
  max-width: 1400px;
  margin: 24px auto;
  background: rgba(30, 10, 10, 0.98);
  border-radius: 18px;
  box-shadow: 0 0 32px #2a0000, 0 0 2px #fff2;
  overflow: visible;
  min-height: 100vh;
  max-height: none;
  display: flex;
  flex-direction: column;
}

.game-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    linear-gradient(45deg, transparent 30%, rgba(139, 0, 0, 0.1) 50%, transparent 70%);
  pointer-events: none;
  border-radius: 15px;
}

.game-header {
  text-align: center;
  margin-bottom: 30px;
  padding-bottom: 25px;
  border-bottom: 2px solid #8b0000;
  position: relative;
}

.game-header h1 {
  color: #ff4444;
  font-size: 3em;
  font-weight: bold;
  letter-spacing: 3px;
  text-shadow:
    0 0 20px #8b0000,
    0 0 40px #8b0000,
    2px 2px 4px rgba(0, 0, 0, 0.8);
  margin-bottom: 10px;
  font-family: "SimSun", serif;
}

.subtitle {
  color: #ccc;
  font-size: 1.2em;
  margin-bottom: 20px;
  font-style: italic;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

.game-layout {
  display: block;
  width: 100%;
  height: auto;
  min-height: 600px;
  max-height: none;
  overflow: visible;
}

.game-content {
  display: block;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 28px 48px 0 48px;
  background: transparent;
  min-height: 300px;
}

.story-text {
  margin-bottom: 32px;
  position: static;
  z-index: auto;
  font-size: 1.25rem;
  line-height: 1.8;
  text-align: justify;
  max-width: 1100px;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 8px;
  text-indent: 2em;
  letter-spacing: 0.5px;
}

.choices {
  margin-top: 0;
  margin-bottom: 16px;
  position: static;
  z-index: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 18px;
}

.choice-btn {
  background: linear-gradient(135deg, #2a2a2a 0%, #1a1a1a 100%);
  color: #fff;
  border: 2px solid #555;
  padding: 0.7em 2.2em;
  border-radius: 10px;
  cursor: pointer;
  font-size: 1.25rem;
  font-weight: 500;
  letter-spacing: 1px;
  box-shadow:
    0 4px 12px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
  outline: none;
  position: relative;
  overflow: hidden;
  line-height: 1.7;
  min-width: 220px;
  max-width: 90vw;
}

.choice-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s;
}

.choice-btn:hover {
  background: linear-gradient(135deg, #8b0000 0%, #660000 100%);
  border-color: #ff4444;
  transform: translateY(-2px);
  box-shadow:
    0 6px 20px rgba(139, 0, 0, 0.4),
    0 0 20px rgba(255, 68, 68, 0.3);
}

.choice-btn:hover::before {
  left: 100%;
}

.choice-btn:active {
  transform: translateY(0);
  box-shadow:
    0 2px 8px rgba(139, 0, 0, 0.4),
    inset 0 2px 4px rgba(0, 0, 0, 0.3);
}

.choice-btn:disabled {
  background: #333;
  color: #666;
  border-color: #444;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.choice-btn:disabled:hover {
  background: #333;
  border-color: #444;
  transform: none;
  box-shadow: none;
}

.game-controls {
  display: flex;
  gap: 18px;
  justify-content: flex-end;
  margin-bottom: 12px;
}

.control-btn {
  font-size: 1.08rem;
  padding: 0.6em 1.5em;
  border-radius: 7px;
}

@keyframes shake {

  0%,
  100% {
    transform: translateX(0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

.shake {
  animation: shake 0.5s ease-in-out;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 68, 68, 0.7);
  }

  70% {
    box-shadow: 0 0 0 10px rgba(255, 68, 68, 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(255, 68, 68, 0);
  }
}

.pulse {
  animation: pulse 1s infinite;
}

@keyframes glow {

  0%,
  100% {
    text-shadow: 0 0 5px rgba(255, 170, 0, 0.5);
  }

  50% {
    text-shadow: 0 0 20px rgba(255, 170, 0, 0.8), 0 0 30px rgba(255, 170, 0, 0.6);
  }
}

.glow {
  animation: glow 2s ease-in-out infinite alternate;
}

/* 响应式设计 */
@media (max-width: 900px) {
  .game-content {
    padding: 12px 24px 0 24px;
    max-width: 95vw;
  }

  .story-text {
    font-size: 1.2rem;
    max-width: 100%;
    padding: 0 12px;
  }
}

@media (max-width: 600px) {
  .game-container {
    margin: 8px;
    border-radius: 8px;
  }

  .game-header h1 {
    font-size: 1.8rem;
  }

  .game-content {
    padding: 8px 16px;
  }

  .story-text {
    font-size: 1.1rem;
    line-height: 1.7;
    padding: 0 8px;
  }
}

@media (max-width: 480px) {
  .game-header h1 {
    font-size: 1.6rem;
  }

  .story-text {
    padding: 12px;
    font-size: 1.1rem;
  }
}

.stat-value[data-critical="true"] {
  color: #ff4444;
  animation: pulse 1s infinite;
}

.stat-value[data-warning="true"] {
  color: #ffaa00;
  animation: glow 2s ease-in-out infinite alternate;
}

.stat-value[data-good="true"] {
  color: #44ff44;
}

.game-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><filter id="noise"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4" stitchTiles="stitch"/><feColorMatrix type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.1 0"/></filter></defs><rect width="100" height="100" filter="url(%23noise)"/></svg>');
  pointer-events: none;
  opacity: 0.02;
  border-radius: 15px;
}